apply plugin: 'com.android.application'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.novoda:gradle-build-properties-plugin:0.4.1'
    }
}

apply plugin: 'com.novoda.build-properties'

buildProperties {
    dev {
        using rootProject.file('resources/environments/dev.properties')
    }
    prod {
        using(rootProject.file('resources/environments/production.properties')).or(dev)
    }
    local {
        using rootProject.file('local.properties')
    }
}

android {
    compileSdkVersion versions.androidSdk.compile
    buildToolsVersion versions.androidSdk.buildTools

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultConfig {
        applicationId "com.mvp.nkumar.mvp"
        minSdkVersion versions.androidSdk.min
        targetSdkVersion versions.androidSdk.target
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes.all { buildType ->
        buildType.ext.proguardRules = { file ->
            buildType.minifyEnabled true
            buildType.proguardFiles getDefaultProguardFile('proguard-android.txt'), file
        }
    }

    buildTypes {
        debug {
            proguardRules rootProject.file('resources/proguard/debug.pro')
        }
        release {
            proguardRules rootProject.file('resources/proguard/release.pro')
            buildConfigBoolean 'ENABLE_ANALYTICS', true
        }
    }

    flavorDimensions 'environment'

    productFlavors.all { flavor ->
        flavor.ext.from = { flavorProperties ->
            logger.debug ">>> Configuring '${flavor.name}' flavor using '${flavorProperties.name}' build properties"
            dimension 'environment'
            flavor.applicationId flavorProperties['applicationId'].string
            flavor.versionCode = flavorProperties['versionCode'].int
            flavor.versionName flavorProperties['versionName'].string
            flavor.buildConfigString 'BASE_URL', (buildProperties.local['baseUrl'] | flavorProperties['baseUrl'])
        }
    }

    productFlavors {
        dev {
            from buildProperties.dev
        }
        production {
            from buildProperties.prod
        }
    }
}

dependencies {
    annotationProcessor libraries.app.autoValue.processor
    annotationProcessor libraries.app.dagger.processor
    annotationProcessor libraries.app.dagger.android.processor
    annotationProcessor libraries.app.autoValue.parcelable.processor
    annotationProcessor libraries.app.autoValue.moshi.processor

    provided libraries.app.autoValue.annotations
    provided libraries.app.autoValue.moshi.annotations

    compile project(':core')
    compile libraries.support.appcompat
    compile libraries.support.v4
    compile libraries.support.recyclerview

    compile libraries.app.dagger.runtime
    compile libraries.app.dagger.android.runtime
    compile libraries.app.dagger.android.support
    compile libraries.app.rxAndroid

    compile libraries.app.picasso

    testCompile libraries.test.junit
    testCompile libraries.test.truth
    testCompile libraries.test.mockito
    testCompile libraries.test.robolectric.core
    testCompile libraries.test.robolectric.multidex
}
